openapi: 3.0.1
info:
  title: Employee Management API
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated Server url
paths:
  /api/users/{id}:
    get:
      tags:
        - user-info-controller
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfo'
    put:
      tags:
        - user-info-controller
      operationId: updateUserInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfo'
    delete:
      tags:
        - user-info-controller
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/payrolls/{id}:
    get:
      tags:
        - pay-roll-controller
      operationId: getPayRollByEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PayRoll'
    put:
      tags:
        - pay-roll-controller
      operationId: updatePayRoll
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payRollDTO:
                  $ref: '#/components/schemas/PayRollDTO'
                userInfoDTO:
                  $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PayRoll'
    delete:
      tags:
        - pay-roll-controller
      operationId: deleteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/leaves/reject/{id}:
    put:
      tags:
        - leave-request-controller
      operationId: rejectLeave
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeaveRequest'
  /api/leaves/cancel/{id}:
    put:
      tags:
        - leave-request-controller
      operationId: cancelLeave
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeaveRequest'
  /api/leaves/approve/{id}:
    put:
      tags:
        - leave-request-controller
      operationId: approveLeave
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeaveRequest'
  /api/users:
    post:
      tags:
        - user-info-controller
      operationId: getAllUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserInfo'
  /api/users/create:
    post:
      tags:
        - user-info-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfo'
  /api/users/authenticate:
    post:
      tags:
        - user-info-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/payrolls/generate/{id}:
    post:
      tags:
        - pay-roll-controller
      operationId: generatePayRoll
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PayRoll'
  /api/leaves/apply:
    post:
      tags:
        - leave-request-controller
      operationId: applyLeave
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LeaveRequest'
  /api/employees:
    post:
      tags:
        - employee-controller
      operationId: getAllEmployees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
  /api/employee/add:
    post:
      tags:
        - employee-controller
      operationId: addEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
  /api/leaves/status/{status}:
    get:
      tags:
        - leave-request-controller
      operationId: getByStatus
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaveRequest'
  /api/leaves/employee/{id}:
    get:
      tags:
        - leave-request-controller
      operationId: getLeaveByEmployeeId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaveRequest'
  /api/healthcheck/up:
    get:
      tags:
        - health-check-controller
      operationId: getHealth
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /api/employee/{id}:
    get:
      tags:
        - employee-controller
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Employee'
    delete:
      tags:
        - employee-controller
      operationId: deleteById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoDTO'
        required: true
      responses:
        '200':
          description: OK
components:
  schemas:
    UserInfoDTO:
      required:
        - emailId
        - id
        - name
        - password
        - role
      type: object
      properties:
        id:
          type: integer
          format: int64
        emailId:
          maxLength: 50
          minLength: 0
          type: string
        password:
          maxLength: 100
          minLength: 8
          type: string
        role:
          type: string
          enum:
            - Admin
            - HR
            - Employee
        name:
          type: string
    UserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        emailId:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - Admin
            - HR
            - Employee
        name:
          type: string
    EmployeeDTO:
      required:
        - department
        - email
        - id
        - jobTitle
        - name
        - user
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 50
          minLength: 3
          type: string
        email:
          maxLength: 50
          minLength: 0
          type: string
        department:
          maxLength: 50
          minLength: 0
          type: string
        jobTitle:
          maxLength: 50
          minLength: 0
          type: string
        salary:
          type: number
        user:
          $ref: '#/components/schemas/UserInfo'
    PayRollDTO:
      required:
        - employee
        - id
        - payDate
      type: object
      properties:
        id:
          type: integer
          format: int64
        employee:
          $ref: '#/components/schemas/EmployeeDTO'
        basicSalary:
          type: number
        deductions:
          type: number
        netSalary:
          type: number
        payDate:
          type: string
          format: date
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        department:
          type: string
        jobTitle:
          type: string
        salary:
          type: number
        user:
          $ref: '#/components/schemas/UserInfo'
    PayRoll:
      type: object
      properties:
        id:
          type: integer
          format: int64
        employee:
          $ref: '#/components/schemas/Employee'
        basicSalary:
          type: number
        deductions:
          type: number
        netSalary:
          type: number
        payDate:
          type: string
          format: date
    LeaveRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        employee:
          $ref: '#/components/schemas/Employee'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
        status:
          type: string
          enum:
            - Pending
            - Approved
            - Rejected
            - Cancelled
    LeaveRequestDTO:
      required:
        - endDate
        - id
        - reason
        - startDate
        - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        employee:
          $ref: '#/components/schemas/EmployeeDTO'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        reason:
          type: string
        status:
          type: string
          enum:
            - Pending
            - Approved
            - Rejected
            - Cancelled
    HealthCheckResponse:
      type: object
      properties:
        appId:
          type: string
        version:
          type: string
        status:
          type: string
